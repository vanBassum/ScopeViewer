<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="scopeView1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PxmNBRaayOXkAAAAAElFTkSuQmCC
</value>
  </data>
</root>